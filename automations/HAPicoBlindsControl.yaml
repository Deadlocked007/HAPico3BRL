blueprint:
  name: Blind Control
  description: Control a set of blinds using Lutron Caseta Pico remote
  domain: automation
  input:
    pico_device:
      name: Pico Device
      description: The device ID of the Lutron Caseta Pico remote
      selector:
        device:
          integration: lutron_caseta
          model: PJ2-3BRL
  trigger:
    - platform: device
      device_id: !input pico_device
      domain: lutron_caseta
      type: press
      subtype: 'on'
      id: on_pressed
    - platform: device
      device_id: !input pico_device
      domain: lutron_caseta
      type: press
      subtype: 'raise'
      id: up_pressed
    - platform: device
      device_id: !input pico_device
      domain: lutron_caseta
      type: release
      subtype: 'raise'
      id: up_released
    - platform: device
      device_id: !input pico_device
      domain: lutron_caseta
      type: press
      subtype: 'stop'
      id: stop_pressed
    - platform: device
      device_id: !input pico_device
      domain: lutron_caseta
      type: press
      subtype: 'lower'
      id: down_pressed
    - platform: device
      device_id: !input pico_device
      domain: lutron_caseta
      type: release
      subtype: 'lower'
      id: down_released
    - platform: device
      device_id: !input pico_device
      domain: lutron_caseta
      type: press
      subtype: 'off'
      id: off_pressed
  mode: single
  max_exceeded: silent
  variables:
    blind_position: "{{ state_attr(blind_entity, 'current_position') }}"
    blind_entity: "{{ state_attr(blind_device, 'entity_id') }}"
    blind_device: "{{ state_attr(blind_group, 'entity_id') }}"
    blind_max: "{{ state_attr(blind_entity, 'max') }}"
    blind_min: "{{ state_attr(blind_entity, 'min') }}"
  action:
    - choose:
        - conditions:
            - condition: trigger
              id: on_pressed
          sequence:
            - service: homeassistant.turn_on
              entity_id: "{{ blind_device }}"
        - conditions:
            - condition: trigger
              id: up_pressed
          sequence:
            - repeat:
                count: 10
                sequence:
                  - service: cover.set_cover_position
                    data:
                      entity_id: "{{ blind_entity }}"
                      position: "{{ min(blind_max, blind_position + 10) }}"
                  - delay: 1
                  - set_variable:
                      variable: blind_position
                      value: "{{ state_attr(blind_entity, 'current_position') }}"
                  - condition: template
                    value_template: "{{ blind_position == blind_max }}"
                    sequence:
                      - break
        - conditions:
            - condition: trigger
              id: up_released
          sequence:
            - service: cover.stop_cover
              entity_id: "{{ blind_entity }}"
        - conditions:
            - condition: trigger
              id: stop_pressed
          sequence:
            - service: cover.stop_cover
              entity_id: "{{ blind_entity }}"
        - conditions:
            - condition: trigger
              id: down_pressed
          sequence:
            - repeat:
                count: 10
            sequence:
              - service: cover.set_cover_position
                data:
                  entity_id: "{{ blind_entity }}"
                  position: "{{ max(blind_min, blind_position - 10) }}"
              - delay: 1
              - set_variable:
                  variable: blind_position
                  value: "{{ state_attr(blind_entity, 'current_position') }}"
              - condition: template
                value_template: "{{ blind_position == blind_min }}"
                sequence:
                  - break
    - conditions:
        - condition: trigger
          id: down_released
      sequence:
        - service: cover.stop_cover
          entity_id: "{{ blind_entity }}"
    - conditions:
        - condition: trigger
          id: off_pressed
      sequence:
        - service: homeassistant.turn_off
          entity_id: "{{ blind_device }}"
- delay: 1
- set_variable:
    variable: blind_position
    value: "{{ state_attr(blind_entity, 'current_position') }}"
- input_select.select_option:
    data:
      entity_id: input_select.blind_position
      option: "{{ blind_position }}"
