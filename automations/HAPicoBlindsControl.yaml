blueprint:
  name: HABlindsControl
  description: "Control multiple blinds using a Pico remote."
  source_url: https://github.com/Deadlocked007/HAPico3BRL/blob/main/automations/HAPicoBlindsControl.yaml

  domain: automation

  input:
    pico_device:
      name: Pico Device
      description: "Pico remote to associate with the blinds entities."
      selector:
        device:
    blinds_entities:
      name: Blinds Entities
      description: "Blinds entities to control."
      selector:
        entity:
          domain: cover
          multiple: true
    step:
      name: Position Step Percentage
      description: "The percentage of position to which the blinds are changed when the RAISE/LOWER buttons are pressed and held."
      selector:
        number:
          min: 1
          max: 33
          unit_of_measurement: percentage
      default: 10
    speed:
      name: Position Transition Speed
      description: "The rate of speed in milliseconds at which the position of the blinds will be changed."
      selector:
        number:
          min: 100
          max: 2000
          unit_of_measurement: milliseconds
      default: 500
    favorite_position:
      name: Favorite Position Percentage
      description: "The favorite position percentage to set when the favorite (middle) button is pressed."
      selector:
        number:
          min: 0
          max: 100
          unit_of_measurement: percentage
      default: 50

trigger:
  - platform: device
    device_id: !input pico_device
    domain: lutron_caseta
    type: press
    subtype: 'on'
    id: on_pressed
  - platform: device
    device_id: !input pico_device
    domain: lutron_caseta
    type: press
    subtype: 'raise'
    id: up_pressed
  - platform: device
    device_id: !input pico_device
    domain: lutron_caseta
    type: release
    subtype: 'raise'
    id: up_released
  - platform: device
    device_id: !input pico_device
    domain: lutron_caseta
    type: press
    subtype: 'stop'
    id: stop_pressed
  - platform: device
    device_id: !input pico_device
    domain: lutron_caseta
    type: press
    subtype: 'lower'
    id: down_pressed
  - platform: device
    device_id: !input pico_device
    domain: lutron_caseta
    type: release
    subtype: 'lower'
    id: down_released
  - platform: device
    device_id: !input pico_device
    domain: lutron_caseta
    type: press
    subtype: 'off'
    id: off_pressed

variables:
  step: !input step
  speed: !input speed
  favorite_position: !input favorite_position

condition: []

action:
  - choose:
    - conditions:
        - condition: trigger
          id: on_pressed
      sequence:
        - service: cover.set_cover_position
          data:
            position: 100
          target:
            entity_id: !input blinds_entities
    - conditions:
        - condition: trigger
          id: up_pressed
      sequence:
        - repeat:
            sequence:
              - service: cover.set_cover_position
                data:
                  position: "{{ (state_attr(blinds_entity, 'current_position') | int) + step }}"
                target:
                  entity_id: !input blinds_entities
              - delay:
                  milliseconds: !input speed
            until:
              - condition: numeric_state
                entity_id: !input blinds_entities
                attribute: current_position
                state: "100"
    - conditions:
        - condition: trigger
          id: up_released
      sequence:
        - delay:
            milliseconds: 100
    - conditions:
        - condition: trigger
          id: stop_pressed
      sequence:
        - service: cover.set_cover_position
          data:
            position: !input favorite_position
          target:
            entity_id: !input blinds_entities
    - conditions:
        - condition: trigger
          id: down_pressed
      sequence:
        - repeat:
            sequence:
              - service: cover.set_cover_position
                data:
                  position: "{{ (state_attr(blinds_entity, 'current_position') | int) - step }}"
                target:
                  entity_id: !input blinds_entities
              - delay:
                  milliseconds: !input speed
            until:
              - condition: numeric_state
                entity_id: !input blinds_entities
                attribute: current_position
                state: "0"
    - conditions:
        - condition: trigger
          id: down_released
      sequence:
        - delay:
            milliseconds: 100
    - conditions:
        - condition: trigger
          id: off_pressed
      sequence:
        - service: cover.set_cover_position
          data:
            position: 0
          target:
            entity_id: !input blinds_entities

mode: restart

